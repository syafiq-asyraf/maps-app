import { LatLngBoundsExpression, LatLngExpression } from "leaflet";
import React, { useMemo, useState } from "react";
import { Polygon, Rectangle, useMap } from "react-leaflet";

export const newBounds = [
  [-87.359296, 35.00118],
  [-85.606675, 34.984749],
  [-85.431413, 34.124869],
  [-85.184951, 32.859696],
  [-85.069935, 32.580372],
  [-84.960397, 32.421541],
  [-85.004212, 32.322956],
  [-84.889196, 32.262709],
  [-85.058981, 32.13674],
  [-85.053504, 32.01077],
  [-85.141136, 31.840985],
  [-85.042551, 31.539753],
  [-85.113751, 31.27686],
  [-85.004212, 31.003013],
  [-85.497137, 30.997536],
  [-87.600282, 30.997536],
  [-87.633143, 30.86609],
  [-87.408589, 30.674397],
  [-87.446927, 30.510088],
  [-87.37025, 30.427934],
  [-87.518128, 30.280057],
  [-87.655051, 30.247195],
  [-87.90699, 30.411504],
  [-87.934375, 30.657966],
  [-88.011052, 30.685351],
  [-88.10416, 30.499135],
  [-88.137022, 30.318396],
  [-88.394438, 30.367688],
  [-88.471115, 31.895754],
  [-88.241084, 33.796253],
  [-88.098683, 34.891641],
  [-88.202745, 34.995703],
  [-87.359296, 35.00118],
];

export const newBounds2 = [
  [-123.211348, 46.174138],
  [-123.11824, 46.185092],
  [-122.904639, 46.08103],
  [-122.811531, 45.960537],
  [-122.762239, 45.659305],
  [-122.247407, 45.549767],
  [-121.809251, 45.708598],
  [-121.535404, 45.725029],
  [-121.217742, 45.670259],
  [-121.18488, 45.604536],
  [-120.637186, 45.746937],
  [-120.505739, 45.697644],
  [-120.209985, 45.725029],
  [-119.963522, 45.823614],
  [-119.525367, 45.911245],
  [-119.125551, 45.933153],
  [-118.988627, 45.998876],
  [-116.918344, 45.993399],
  [-116.78142, 45.823614],
  [-116.545912, 45.752413],
  [-116.463758, 45.61549],
  [-116.671881, 45.319735],
  [-116.732128, 45.144473],
  [-116.847143, 45.02398],
  [-116.830713, 44.930872],
  [-116.934774, 44.782995],
  [-117.038836, 44.750133],
  [-117.241483, 44.394132],
  [-117.170283, 44.257209],
  [-116.97859, 44.240778],
  [-116.896436, 44.158624],
  [-117.027882, 43.830007],
  [-117.027882, 42.000709],
  [-118.698349, 41.989755],
  [-120.001861, 41.995232],
  [-121.037003, 41.995232],
  [-122.378853, 42.011663],
  [-123.233256, 42.006186],
  [-124.213628, 42.000709],
  [-124.356029, 42.115725],
  [-124.432706, 42.438865],
  [-124.416275, 42.663419],
  [-124.553198, 42.838681],
  [-124.454613, 43.002989],
  [-124.383413, 43.271359],
  [-124.235536, 43.55616],
  [-124.169813, 43.8081],
  [-124.060274, 44.657025],
  [-124.076705, 44.772041],
  [-123.97812, 45.144473],
  [-123.939781, 45.659305],
  [-123.994551, 45.944106],
  [-123.945258, 46.113892],
  [-123.545441, 46.261769],
  [-123.370179, 46.146753],
  [-123.211348, 46.174138],
];

const innerBounds = [
  [49.505, -2.09],
  [53.505, 2.09],
];
const outerBounds = [
  [50.505, -29.09],
  [52.505, 29.09],
];

const redColor = { color: "red" };
const whiteColor = { color: "white" };

const SetBoundsRectangles = () => {
  const [bounds, setBounds] = useState(outerBounds);
  const map = useMap();

  const innerHandlers = useMemo(
    () => ({
      click() {
        setBounds(newBounds.map((i) => [i[1], i[0]]));
        map.fitBounds(
          newBounds.map((i) => [i[1], i[0]]) as LatLngBoundsExpression
        );
      },
    }),
    [map]
  );
  const outerHandlers = useMemo(
    () => ({
      click() {
        setBounds(newBounds2.map((i) => [i[1], i[0]]));
        map.fitBounds(
          newBounds2.map((i) => [i[1], i[0]]) as LatLngBoundsExpression
        );
      },
    }),
    [map]
  );

  return (
    <>
      <Polygon
        positions={newBounds.map((i) => [i[1], i[0]]) as LatLngExpression[]}
        eventHandlers={innerHandlers}
      />
      <Polygon
        positions={newBounds2.map((i) => [i[1], i[0]]) as LatLngExpression[]}
        eventHandlers={outerHandlers}
      />
      {/* <Rectangle
        bounds={outerBounds as LatLngBoundsExpression}
        eventHandlers={outerHandlers}
        pathOptions={bounds === outerBounds ? redColor : whiteColor}
      />
      <Rectangle
        bounds={innerBounds as LatLngBoundsExpression}
        eventHandlers={innerHandlers}
        pathOptions={bounds === innerBounds ? redColor : whiteColor}
      /> */}
    </>
  );
};

export default SetBoundsRectangles;
